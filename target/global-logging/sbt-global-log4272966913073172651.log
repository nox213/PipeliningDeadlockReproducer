[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.0 (Eclipse Adoptium Java 21.0.1)
[debug]       Load.loadUnit: plugins took 34.929208ms
[debug]       Load.loadUnit: defsScala took 0.096041ms
[debug] [Loading] Scanning directory /Users/devsisters/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/devsisters/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 7.715625 ms
[debug]           Load.resolveProject(global-plugins) took 19.264ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/devsisters/.sbt/1.0/plugins, plugins: List(<none>))) took 36.75425ms
[debug] [Loading] Done in /Users/devsisters/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 45.295292ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.077125ms
[debug]     Load.loadUnit(file:/Users/devsisters/.sbt/1.0/plugins/, ...) took 83.379083ms
[debug]   Load.apply: load took 261.9155ms
[debug]   Load.apply: resolveProjects took 2.229375ms
[debug]   Load.apply: finalTransforms took 23.394209ms
[debug]   Load.apply: config.delegates took 2.4595ms
[debug]   Load.apply: Def.make(settings)... took 152.3285ms
[debug]   Load.apply: structureIndex took 48.527875ms
[debug]   Load.apply: mkStreams took 0.780459ms
[info] loading global plugins from /Users/devsisters/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 936.790042ms
[debug]           Load.loadUnit: plugins took 6.971125ms
[debug]           Load.loadUnit: defsScala took 0.001459ms
[debug] [Loading] Scanning directory /Users/devsisters/repos/PipeliningDeadLock/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/devsisters/repos/PipeliningDeadLock/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.876875 ms
[debug]               Load.resolveProject(pipeliningdeadlock-build) took 0.646917ms
[debug]             Load.loadTransitive: finalizeProject(Project(id pipeliningdeadlock-build, base: /Users/devsisters/repos/PipeliningDeadLock/project, plugins: List(<none>))) took 1.768375ms
[debug] [Loading] Done in /Users/devsisters/repos/PipeliningDeadLock/project, returning: (pipeliningdeadlock-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2.881209ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.004542ms
[debug]         Load.loadUnit(file:/Users/devsisters/repos/PipeliningDeadLock/project/, ...) took 10.164375ms
[debug]       Load.apply: load took 10.723125ms
[debug]       Load.apply: resolveProjects took 0.048667ms
[debug]       Load.apply: finalTransforms took 4.554417ms
[debug]       Load.apply: config.delegates took 0.176667ms
[debug]       Load.apply: Def.make(settings)... took 55.253667ms
[debug]       Load.apply: structureIndex took 16.728083ms
[debug]       Load.apply: mkStreams took 0.001542ms
[info] loading project definition from /Users/devsisters/repos/PipeliningDeadLock/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 504.997375ms
[debug]     Load.loadUnit: defsScala took 0.001042ms
[debug] [Loading] Scanning directory /Users/devsisters/repos/PipeliningDeadLock
[debug]       Load.loadUnit: mkEval took 2.347042ms
[debug] [Loading] Found root project root w/ remaining entities
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.765125 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 1.357083ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /Users/devsisters/repos/PipeliningDeadLock, dependencies: List(ClasspathDependency(LocalProject(entities),None)), plugins: List(<none>))) took 2.534959ms
[debug] [Loading] Loading project entities @ /Users/devsisters/repos/PipeliningDeadLock/entities
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.580208 ms
[debug]       Load.resolveProject(entities) took 0.560167ms
[debug] [Loading] Done in /Users/devsisters/repos/PipeliningDeadLock, returning: (root, entities)
[debug]     Load.loadUnit: loadedProjectsRaw took 1357.244292ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.278584ms
[debug]   Load.loadUnit(file:/Users/devsisters/repos/PipeliningDeadLock/, ...) took 1869.93025ms
[debug] Load.apply: load took 1870.981458ms
[debug] Load.apply: resolveProjects took 0.157417ms
[debug] Load.apply: finalTransforms took 5.933416ms
[debug] Load.apply: config.delegates took 0.226084ms
